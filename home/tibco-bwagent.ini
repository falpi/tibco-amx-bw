# Copyright (c) 2014 TIBCO Software Inc.
# All Rights Reserved.
#
# BusinessWorks Agent configuration (bwagent.ini) file template. BusinessWorks Agent
# configuration file contains BW Admin data store configuration properties.
# See documentation for further explanation of the configuration properties.
#

#------------------------------------------------------------------------------
# Section: BW Agent general configuraton.
#------------------------------------------------------------------------------
# Admin mode. BW Administration tools can work in two modes, enterprise mode or
# local mode. In enterprise mode it works with the agents across machines.
# In local mode it works only with local machine and assumes no data store
# and transport and agents are available. The actions performed in local mode
# are not visible to the agents when ever they are started or even
# the admin tool when it is started in the enterprise mode
bw.admin.mode=enterprise

# Network (group) name
bw.agent.networkName=testNetwork

# This is the name the bwagent is identified with, and it must be unique in a bwadmin
# cluster. bwagent fails to start if it is not unique
bw.agent.memberName=testMember

#------------------------------------------------------------------------------
# Section: Logging configuration.
#------------------------------------------------------------------------------
# logback Configuration file to be used by this agent
#logback.configurationFile=bwagent-logback.xml

#------------------------------------------------------------------------------
# Section: Web server HTTP and HTTPS configuration.
#------------------------------------------------------------------------------
# HTTP port
bw.agent.http.port=8079

# HTTP interface (default=localhost)
bw.agent.http.host=0.0.0.0

# HTTP internal communication port
# Internal server will be started in this port which will be 
# used by Thor engine to communicate with the bwagent to report status of appnodes and applications.
# bw.appnode.agent.http.communication.port=56565

# HTTP Request Access Log Configuration file
bw.agent.http.access.log.config=bwagent-access.xml

# Authentication mechanism used by the REST API, BASIC (default) or DIGEST
#bw.agent.bw.auth=DIGEST
# Authorization used by the REST API, make this flag to true for enabling REST API authorization. 
# bw.agent.http.authorization=false
# secure port
#bw.agent.https.port=8886

# truststore
#bw.agent.https.truststorepath=

# truststore password
#bw.agent.https.truststorepassword=

# keystore
#bw.agent.https.keystorepath=

# keystore password
#bw.agent.https.keystorepassword=

# exclude protocols
#bw.agent.https.excludeprotocols=SSLv2Hello,SSLv3

# include protocols
#bw.agent.https.includeprotocols=TLSv1,TLSv1.1,TLSv1.2

#------------------------------------------------------------------------------
# Section: Configuration for AppNode to agent communication.
#------------------------------------------------------------------------------
# User used by the AppNodes to communicate with the bwagent
#bw.agent.appnode.user=bwappnode

# Password for user used by AppNodes to communicate with the bwagent
# If not set, the Obfuscated password is read from the configured realm file,
# e.g. $BW_HOME/config/realm.properties
bw.agent.appnode.password=OBF:1sho1wgi1u9d1x1d1xfj1x191ua51wfg1shu

#------------------------------------------------------------------------------
# Section: TEA Agent configuration.
#------------------------------------------------------------------------------
bw.agent.tea.agent.host=0.0.0.0
bw.agent.tea.agent.port=9091
#bw.agent.tea.agent.shutdown.port=5678
#bw.agent.tea.agent.context.path=/bwta

# Optionally configure a TEA server URL to be used in case there is
# currently none configured in the datastore

#------------------------------------------------------------------------------
# Section: Technology Type Configuration. Supported types are DBEMS or DBFTL. 
# DBEMS type uses a Database data store, EMS as the transport and
# EMS Qin as clustering technology.
# DBFTL type uses a Database data store, FTL as the transport and
# clustering technology.
#------------------------------------------------------------------------------
bw.agent.technology.type=dbftl

# Timeout for requests sent to BW agents to find the status of
# AppNodes, Applications, Agents in milliseconds
#bw.agent.technology.remote.status.requestTimeout=3000

# Timeout for requests sent to other BW agents.
# Value is in milliseconds (default: 60s)
bw.agent.technology.requestTimeout=60000

#------------------------------------------------------------------------------
# Section: DBFTL technology type.
#------------------------------------------------------------------------------
# Database provider. Supported options are postgresql, mysql and oracle database 12c, MS sqlserver, db2
bw.agent.technology.dbftl.db.provider=mariadb

# DB driver
# Example: dbDriver=org.postgresql.Driver
# Example: dbDriver=com.mysql.jdbc.Driver
# Example: dbDriver=oracle.jdbc.OracleDriver
# Example: dbDriver=com.microsoft.sqlserver.jdbc.SQLServerDriver
# Example: dbDriver=com.ibm.db2.jcc.DB2Driver
# Example: dbDriver=org.mariadb.jdbc.Driver
bw.agent.technology.dbftl.db.driver=org.mariadb.jdbc.Driver

# DB connection URL
# Example: dbConnectionURL=jdbc:postgresql://db:5432/bwadmindb
# Example: dbConnectionURL=jdbc:mysql://db:3306/bwadmindb
# Example: dbConnectionURL=jdbc:oracle:thin:@db:1521:bwadmindb
# Example: dbConnectionURL=jdbc:sqlserver://db:1433;databaseName=bwadmindb
# Example: dbConnetcionURL=jdbc:db2://db:50000/bwadmindb
# Example: dbConnectionURL=jdbc:mariadb://db:3306/bwadmindb

#bw.agent.technology.dbftl.db.connectionURL=jdbc:postgresql://localhost:5432/bwadmindb
bw.agent.technology.dbftl.db.connectionURL=jdbc:mariadb://localhost:3306/bwadmindb

# DB user
# Example: dbUserName=bwuser
bw.agent.technology.dbftl.db.userName=bwuser

# DB password
# Example: dbPassword=bwuser
bw.agent.technology.dbftl.db.password=bwuser

# FTL Realm server URL
# Example: ftlRealmServerUrl=http://localhost:8070
bw.agent.technology.dbftl.ftl.realmserver=http://localhost:8070

# FTL application name
# Example: ftlApplicationName=bwadmin
bw.agent.technology.dbftl.ftl.application=bwadmin

# FTL identifier
# Example: ftlIdentifier=
bw.agent.technology.dbftl.ftl.identifier=

# FTL user
# Example: ftlUserName=admin
bw.agent.technology.dbftl.ftl.username=

# FTL user password
# Example: ftlPassword=
bw.agent.technology.dbftl.ftl.password=

# FTL endpoint
# Example: ftlEndpoint=bw-endpoint
bw.agent.technology.dbftl.ftl.endpoint=bwadmin-endpoint

# FTL data format
# Example: ftlDataformat=
bw.agent.technology.dbftl.ftl.dataformat=bw-format

# FTL inbox name
# Example: ftlInbox=
bw.agent.technology.dbftl.ftl.inbox=bw-inbox

# Monitor data format
# Example: statsdataformat=json
bw.monitor.data.format=
# ------------------------------------------------------------------------------
# Section:  Governance & Policy Director Configuration.  The properties in this
# section are applicable to Governance Lifecycle Event Listener and it is used 
# to communicate with the TIBCO Policy Director Administrator.     
# ------------------------------------------------------------------------------
# Enable or disable the Governance Lifecycle Event Listener.  This property is 
# optional and it specifies whether the Governance Lifecycle Event Listener   
# should be enabled or disabled in the BW Agent. The supported values are: true 
# or false. The default value is 'false'.
bw.governance.enabled=false

# Policy Director Administrator JMS URL.  This property is optional and it is 
# used to specify the JMS server URL used to communicate with the 
# Policy Director Administrator.  If this property is not set, then the 
# Lifecycle Event Listener will not attempt to connect to the JMS server.  The 
# URL is expected to start with 'tcp://' or 'ssl://' and the failover URLs can 
# be specified as a ',' or '+' separated list.
bw.governance.jms.server.url=tcp://localhost:7222

# Policy Director Administrator JMS User Name.  This property is required if   
# the Policy Director Administrator JMS URL is specified.
bw.governance.jms.server.username=admin

# Policy Director Administrator JMS User Password.  This property is required 
# if the Policy Director Administrator JMS URL is specified.
bw.governance.jms.server.password=

# Policy Director Administrator JMS SSL connection trust store type.  This 
# property is required if the JMS server protocol is ssl.  The supported values 
# are 'JKS' and 'JCEKS'. The default value is 'JKS'
bw.governance.jms.ssl.trust.store.type=JKS

# Policy Director Administrator JMS SSL connection trust store location. This
# property is required if the JMS server protocol is ssl.
bw.governance.jms.ssl.trust.store.location=

# Policy Director Administrator JMS SSL connection trust store password. This
# property is required if the JMS server protocol is ssl.  The password may 
# be clear text or supplied as an obfuscated string.
bw.governance.jms.ssl.trust.store.password=

# Policy Director Administrator JMS Connection attempt count.  This property is
# required if the Policy Director Administrator JMS URL is specified and it 
# specifies the number of JMS connection attempts the Lifecycle Event Listener 
# will make. The default value is '120'.
bw.governance.jms.reconnect.attempt.count=120

# Policy Director Administrator JMS Connection attempt timeout. This property 
# is required if the Policy Director Administrator JMS URL is specified and 
# it specifies the timeout between the attempt to reestablish connection to 
# the JMS server.  The default value  is '500'.
bw.governance.jms.reconnect.attempt.timeout=500

# Policy Director Administrator JMS Connection attempt delay.  This property 
# is required if the Policy Director Administrator JMS URL is specified and it 
# specifies the delay in milliseconds between attempts to establish reestablish 
# connection the JMS server.  The default value is '500'.
bw.governance.jms.reconnect.attempt.delay=500

# Policy Director Administrator JMS receiver queue name prefix.  This property 
# is required if the Policy Director Administrator JMS URL is specified and 
# it specifies receiver queue name prefix for the Lifecycle Event Listener 
# and Policy Director Administrator communication. This property value must 
# match the value specified in the Policy Director Administrator configuration.
# The default value is 'governance.de.bw.default'.
bw.governance.jms.queue.pd.receiver.name=governance.de.bw.default

# Policy Director Administrator JMS JNDI custom property.  This property is
# optional and it provides the ability to specify custom property for the 
# JMS JNDI Initial Context.  For example to provide a custom property
# called "myProperty" for the JNDI Initial Context, then specify 
# a property "bw.governance.jms.application.property.myProperty=".
#bw.governance.jms.application.property.<UserCustomProperty>=
